1 
Задача наблюдение и классификации уровня воды по стационарной камере 
2 
Существующие подходы наблюдения за высота водной поверхности над условной горизонтальной плоскостью заключаются
в нанесении меток на опоры мостов быки, и наблюдение со стациолнарных видеокамер уровня оператором
(пример вида http://uznt42.ru/index.php?do=static&page=vsekamery)
3 
технический подход стандартный датасет с классами на 3VGG слоя, класификация это уровень от 3.5 до 5.5 с шагом 0.25 	9 классов
4 
демонстрация работы в виде Jupyter Notebook dip_finall.ipynb предварительно нужно запустить модель в через tensorflow/serving. В данном случае на Windows через Docker
5 Оценка модели дает предположение что нужно больше наблюдений и возможно иметь 2 модели на ночных и дневных датасетах.
Несмотря на тренировку под 100%, тестовый набор дал 65%. Но так как датасет это каждые 2 минуты, а изменение уровня процесс длительный, то очевидно можно улучшить точность постороения граффиков применим метод K-ближайших соседей или правило 3х сигм (т.е. отсеивать заведомо ошибочные результаты). В динамике будет отсеивать ошибки нормально



################
Файлы Python в каталоге diplom

#Развертывание DOCKER https://habr.com/ru/post/534504/
#затем в поверshell
PS docker pull tensorflow/serving
#стартуем модель
PS run -t --rm -d -p 8501:8501 -v "f:/dip/model:/models/water_level" -e MODEL_NAME=water_level tensorflow/serving
#в вашем случаем путь к модели любой
#проверяем
PS docker container ls
#видим
#a350e5c15f20   tensorflow/serving   "/usr/bin/tf_serving…"   9 seconds ago   Up 8 seconds   8500/tcp, #0.0.0.0:8501->8501/tcp, :::8501->8501/tcp   vibrant_clarke
#для остановки
PS docker stop a350e5c15f20
#где f1ab0065e073 это id из списка контейнеров docker container ls

Затем запускаем блокнот diplom\dip_finall.ipynb